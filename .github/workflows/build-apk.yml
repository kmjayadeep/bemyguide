name: Build Flutter APK

on:
  push:
    branches: [ main, master ]
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0, v1.0.1, etc.
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.29.3'
        channel: 'stable'
        cache: true
        
    - name: Create .env file
      working-directory: ./app
      run: |
        echo "CLOUDFLARE_AI_BASE_URL=${{ secrets.CLOUDFLARE_AI_BASE_URL }}" >> .env
        echo "CLOUDFLARE_AI_TOKEN=${{ secrets.CLOUDFLARE_AI_TOKEN }}" >> .env
        echo "CLOUDFLARE_AI_MODEL=${{ secrets.CLOUDFLARE_AI_MODEL }}" >> .env

    - name: Setup Release Keystore
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        # Decode base64 keystore and save it
        echo "${{ secrets.RELEASE_KEYSTORE_BASE64 }}" | base64 -d > upload-keystore.jks

        # Create key.properties file for release signing
        cat > app/android/key.properties << EOF
        storePassword=${{ secrets.KEYSTORE_PASSWORD }}
        keyPassword=${{ secrets.KEY_PASSWORD }}
        keyAlias=${{ secrets.KEY_ALIAS }}
        storeFile=../../upload-keystore.jks
        EOF
        
    - name: Get Flutter dependencies
      working-directory: ./app
      run: flutter pub get
      
    - name: Analyze Flutter code
      working-directory: ./app
      run: flutter analyze
      
    - name: Run Flutter tests
      working-directory: ./app
      run: flutter test
      
    - name: Build Debug APK
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      working-directory: ./app
      run: flutter build apk --debug
      
    - name: Upload Debug APK
      if: ${{ !startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v4
      with:
        name: app-debug-apk
        path: app/build/app/outputs/flutter-apk/app-debug.apk
        retention-days: 7

    - name: Build Release APK
      if: startsWith(github.ref, 'refs/tags/')
      working-directory: ./app
      run: flutter build apk --release
        
    - name: Upload Release APK as Artifact
      if: startsWith(github.ref, 'refs/tags/')
      uses: actions/upload-artifact@v4
      with:
        name: app-release-apk
        path: app/build/app/outputs/flutter-apk/app-release.apk
        retention-days: 30

    - name: Clean up keystore files
      if: always() && startsWith(github.ref, 'refs/tags/')
      run: |
        rm -f upload-keystore.jks
        rm -f app/android/key.properties

    - uses: ncipollo/release-action@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        artifacts: app/build/app/outputs/flutter-apk/app-release.apk
        name: BeMyGuide ${{ github.ref_name }}
        body: |
          ## ðŸ“± Download
          - **APK**: `app-release.apk` (Android)

          ## ðŸ”§ Build Info
          - **Flutter Version**: 3.29.3
          - **Build Type**: Release (Signed with keystore)
          - **Commit**: ${{ github.sha }}

          ## ðŸ“‹ Installation
          1. Download the APK file
          2. Enable "Install from Unknown Sources" in Android settings
          3. Install the APK on your device

          ---
          *Generated automatically by GitHub Actions*
        generateReleaseNotes: true
